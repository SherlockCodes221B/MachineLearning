# -*- coding: utf-8 -*-
"""Sonar-LogisticRegression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ShJ2H_u4GtAZhXstanZ-AHj7WGiZtXJ9
"""

from google.colab import drive
drive.mount('/content/drive')

"""# **Importing dependencies**"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""# **Read the data set**"""

sonardata = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Sonar-Logisticreg/Copy of sonar data.csv',header=None)
sonardata.head()

"""# Analyze the data set"""

sonardata.shape

sonardata.describe()

sonardata[60].value_counts()

sonardata.groupby(60).mean()

sonardata.groupby(60).std()

sonardata.groupby(60).median()

sonardata.groupby(60).max()

sonardata.groupby(60).min()

sonardata.groupby(60).count()

# separating data and Labels
X = sonardata.drop(columns=60, axis=1)
Y = sonardata[60]

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.1, stratify=Y, random_state=2)

model = LogisticRegression()
model.fit(X_train, Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy on training data : ', training_data_accuracy)

#accuracy on test data
X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print('Accuracy on test data : ', test_data_accuracy)

#Add data here
input_data = ()

idana = np.asarray(input_data)
idanareshaped = idana.reshape(1,-1)
prediction = model.predict(idanareshaped)
print(prediction)
if prediction[0]=='R':
  print('Rock')
else:
  print('Mine')